setup_environment: &setup_environment
  docker:
    - image: boosterfuels/circle-build:v1.0-python
      auth:
        username: $DOCKER_USER
        password: $DOCKER_PASS
  environment:
    TZ: "/usr/share/zoneinfo/America/Los_Angeles"
working_directory: ~/project

version: 2
jobs:
  setup:
    <<: *setup_environment
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm i
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Run lint
          command: npm run lint
      - run:
          name: Generate test file
          command: |
            (find . -regex "./test/.*.tests/[^_|.]*/index.js"; find . -maxdepth 3 -regex "./test/.*.tests/.*.test.js$") > test-file-paths.txt
      - run:
          name: Setup mongodb
          command: |
            sudo curl -Ol https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1204-3.4.2.tgz
            sudo mkdir -p mongodb
            sudo tar -zxvf mongodb-linux-x86_64-ubuntu1204-3.4.2.tgz -C mongodb --strip-components=1
            sudo mkdir -p ./data/db
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
            - data
            - mongodb
            - test-file-paths.txt
  test:
    <<: *setup_environment
    #executor: python/default
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Setup test database
          command: |
            sudo ./mongodb/bin/mongod --dbpath ./data/db --logpath ./mongod.log --fork || cat ./mongod.log
      - run:
          name: Test
          command: |
            python -m unittest discover ./tests/extract
            python -m unittest discover ./tests/load
            python -m unittest discover ./tests/transform

            printf "Triggering builds"
            BUILD_INFO=$(curl -X POST -H -d \
                "{}" \
                "https://circleci.com/api/v1/project/$ORGANIZATION/$PROJECT/tree/$BRANCH?circle-token=$CIRCLE_TOKEN")
            BUILD_INFO=$(curl -X POST -H -d \
                "{}" \
                "https://circleci.com/api/v1/project/$ORGANIZATION/$PROJECT1/tree/$BRANCH?circle-token=$CIRCLE_TOKEN")
            BUILD_INFO=$(curl -X POST -H -d \
                "{}" \
                "https://circleci.com/api/v1/project/$ORGANIZATION/$PROJECT2/tree/$BRANCH?circle-token=$CIRCLE_TOKEN")

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./artifacts
      # - run:
      #     name: "Publish Release on GitHub"

workflows:
  version: 2
  install_test_deploy:
    jobs:
      - setup
      - test:
          requires:
            - setup
          filters:
            branches:
              only: 
                - master
                - test
      - publish-github-release:
          requires:
            - test
          filters:
            branches:
              only: master 